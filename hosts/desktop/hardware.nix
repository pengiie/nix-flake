# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.supportedFilesystems = [ "ntfs" "vfat" ];
  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelPackages = pkgs.linuxPackages_6_12;
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/fcef3c68-dc0d-4abb-b522-3ccd956e30a5";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F3E5-1FFD";
      fsType = "vfat";
    };
  fileSystems."/mnt/windows" = {
    device = "/dev/disk/by-uuid/3492A1B992A1804A";
    fsType = "ntfs";
  };
  # fileSystems."/mnt/win-old" = {
  #   device = "/dev/disk/by-uuid/F0440F4B440F13CE";
  #   fsType = "ntfs";
  # };
  # fileSystems."/mnt/win-osu" = {
  #   device = "/dev/disk/by-uuid/F0440F4B440F13CF";
  #   fsType = "ntfs";
  # };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/936331ae-570a-4e37-9ba6-8f61be25cdc4"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
